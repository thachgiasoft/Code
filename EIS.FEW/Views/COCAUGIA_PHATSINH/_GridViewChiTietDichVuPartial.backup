@{
    FX.Core.IoC.Resolve<EIS.Core.IService.ICOCAUGIA_LOAIService>();
}
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    var grid = Html.DevExpress().GridView(
         settings =>
         {
             settings.Name = "gridviewChiTiet";
             settings.KeyFieldName = "ID";
             settings.CallbackRouteValues = new { Controller = "COCAUGIA_PHATSINH", Action = "_GridViewChiTietDichVuPartial" };
             settings.CustomActionRouteValues = new { Controller = "COCAUGIA_PHATSINH", Action = "_GridViewChiTietDichVuFilter" };
             settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "COCAUGIA_PHATSINH", Action = "BatchEditingUpdateModel" };

             settings.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;
             settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
             settings.Settings.VerticalScrollableHeight = 340;
             settings.Settings.ShowFilterRow = true;
             settings.Styles.EmptyDataRow.CssClass = "emptyRow";

             settings.SettingsPager.PageSize = 1000;
             settings.SettingsPager.Visible = false;
             
             settings.Settings.ShowFilterRowMenu = true;
             settings.SettingsContextMenu.Enabled = true;
             settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;
             settings.EncodeHtml = false;

             settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
             settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
             settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.Click;

             settings.Width = Unit.Percentage(100);

             settings.Columns.Add(s =>
             {
                 s.FieldName = "MA_CC";
                 s.Caption = "Mã";
                 s.Width = Unit.Percentage(10);
                 s.ReadOnly = true;
             });
             settings.Columns.Add(s =>
             {
                 s.FieldName = "TEN_CC";
                 s.Caption = "Tên";
                 s.Width = Unit.Percentage(30);
                 s.ReadOnly = true;
             });
             settings.Columns.Add(s =>
             {
                 s.FieldName = "DONVITINH_CC";
                 s.Caption = "Đơn vị tính";
                 s.Width = Unit.Percentage(10);
             });
             settings.Columns.Add(s =>
             {
                 s.FieldName = "DONGIA_CC";
                 s.Caption = "Đơn giá PS";
                 s.Width = Unit.Percentage(10);
             });
             settings.Columns.Add(s =>
             {
                 s.FieldName = "SOLUONG_CC";
                 s.Caption = "Số lượng PS";
                 s.Width = Unit.Percentage(10);
             });
             settings.Columns.Add(s =>
             {
                 s.FieldName = "THANHTIEN_CC";
                 s.Caption = "Thành tiền PS";
                 s.Width = Unit.Percentage(20);
                 s.ReadOnly = true;
             });
             settings.Columns.Add(s =>
             {
                 s.FieldName = "LOAI_CC.TEN";
                 s.Caption = "Loại";
                 s.Width = Unit.Percentage(20);
                 s.GroupIndex = 0;
             });

             //settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
             //settings.CommandColumn.Visible = true;
             //settings.CommandColumn.Width = 30;
             //settings.CommandColumn.ShowSelectCheckbox = true;
             //settings.CommandColumn.SelectAllCheckboxMode = EIS.FEW.Helper.GridViewSelectionHelper.SelectAllButtonMode;

             //settings.Settings.ShowTitlePanel = true;
             //settings.SetTitlePanelTemplateContent(c =>
             //{
             //    ViewContext.Writer.Write(string.Format("<a href='/THEMMOI_COCAUGIA_CHITIET/Index/43'><img style='float:left' title='Click vào để thêm chi tiết' src={0}></a><span class='ChiTietNhom'></span>", Url.Content("~/Content/Images/add2.png")));
             //});

             settings.PreRender = (sender, e) =>
             {
                 MVCxGridView gridView = (MVCxGridView)sender;
                 gridView.ExpandAll();
                 //((MVCxGridView)sender).StartEdit(0);
             };

             settings.BeforeGetCallbackResult = (sender, e) =>
             {
                 MVCxGridView gridView = (MVCxGridView)sender;
                 gridView.ExpandAll();
                 for (int i = 0; i < gridView.VisibleRowCount; i++)
                     gridView.StartEdit(i);
             };
         });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()